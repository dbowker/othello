Log of work:

Pre   - Many hours of contemplating structure and logic of how to program the game.

Day 1 - Spent coding the basic game.  I have done this portion in many different ways, 
(2 hrs) but this is the first time doing it with a one-dimensional array.  Typically
        I use a 2-d matrix of structures with color and an eight element array with 
        pointers to each neighbor.

Day 2 - Planned out the method of passing the data around.  I
(5 hrs) figured it would be easier on paper than trying to code it in one shot.
        
        Also worked on getting environment configured to use NetBeans on Ubuntu with 
        MPI.
        
Day 3 - Completed single process single level of logic and setup the structure for an 
(6 hrs) infrastructure to handle multiple process

Day 4 - Setup multi processing for multiple levels of think-ahead.  Have most of it
(8 hrs) working, but not everything.

Days 5-? - Spent way too much time messing around with a bad communications model.  Rewrote
           the communications to send as an object instead of a text string.  It's way better
           and allows for easier modifications.
2/19	Not sure what day this is, but today I had a successful run and got results I 
        expected.  I setup a depth of 6 and received about 375,000 responses which confirms
        that each move has an average of 8 choices (8.5^6 is about 375,000)
        - left to do - how to decide which initial move to take based upon the 375,000 pieces
        of data just computed.  My first thought is to scatter the data have each "first move"
        computed down to a single value then pick the best one.